// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum TaskStatus {
  TO_DO
  IN_PROGRESS
  CLOSED
  TESTING
}

enum UserRole {
  SYSTEM_ADMIN
  USER
  LEADER
}

enum Gender {
  FEMALE
  MALE
}

model Task {
  id          String     @id @default(uuid())
  title       String     @unique
  description String
  status      TaskStatus @default(TO_DO)

  userId String
  User   User   @relation(fields: [userId], references: [id])

  categoryId String
  Category   Category @relation(fields: [categoryId], references: [id])

  @@map("task")
}

model User {
  id        String    @id @default(uuid())
  name      String    @db.VarChar(100)
  email     String    @unique @db.VarChar(100)
  password  String    @db.VarChar(256)
  phone     String?   @db.VarChar(10)
  address   String?   @db.VarChar(150)
  gender    Gender?
  role      UserRole  @default(USER)
  loggedAt  DateTime?
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  createdBy String?   @map("created_by")
  updatedBy String?   @map("updated_by")
  deletedAt DateTime?
  deletedBy String?   @map("deleted_by")
  tasks     Task[]

  creator User?  @relation("UserCreateUser", fields: [createdBy], references: [id], onDelete: NoAction, onUpdate: NoAction)
  creates User[] @relation("UserCreateUser")

  updater User?  @relation("UserUpdateUser", fields: [updatedBy], references: [id], onDelete: NoAction, onUpdate: NoAction)
  updates User[] @relation("UserUpdateUser")

  deleter User?  @relation("UserDeleteUser", fields: [deletedBy], references: [id], onDelete: NoAction, onUpdate: NoAction)
  deletes User[] @relation("UserDeleteUser")

  @@map("user")
}

model Category {
  id    String @id @default(uuid())
  name  String
  tasks Task[]

  @@map("category")
}
